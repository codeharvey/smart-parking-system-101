service: () -> {
    changeUserRole: (record {role:variant {User; Admin}; user_id:text}) -> (variant {Ok:record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createAdmin: (record {username:text; password:text; email:text; first_name:text; last_name:text; phone_number:text}) -> (variant {Ok:record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createParkingSpot: (record {price_per_hour:text; admin_id:text; number_of_spots:nat64; location:text}) -> (variant {Ok:record {id:text; status:variant {Available; Occupied}; price_per_hour:text; admin_id:text; created_at:nat64; number_of_spots:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createPayment: (record {reservation_id:text; amount:text}) -> (variant {Ok:record {id:text; status:text; reservation_id:text; created_at:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createReservation: (record {user_id:text; duration_hours:nat64; spot_id:text}) -> (variant {Ok:record {id:text; status:text; amount_payable:text; created_at:nat64; user_id:text; duration_hours:nat64; spot_id:text; reserved_at:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createUser: (record {username:text; password:text; email:text; first_name:text; last_name:text; phone_number:text}) -> (variant {Ok:record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    depositFunds: (record {user_id:text; amount:text}) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    getAdmins: () -> (variant {Ok:vec record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getAvailableParkingSpots: () -> (variant {Ok:vec record {id:text; status:variant {Available; Occupied}; price_per_hour:text; admin_id:text; created_at:nat64; number_of_spots:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getParkingSpotByLocation: (text) -> (variant {Ok:record {id:text; status:variant {Available; Occupied}; price_per_hour:text; admin_id:text; created_at:nat64; number_of_spots:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getParkingSpots: () -> (variant {Ok:vec record {id:text; status:variant {Available; Occupied}; price_per_hour:text; admin_id:text; created_at:nat64; number_of_spots:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getPayments: () -> (variant {Ok:vec record {id:text; status:text; reservation_id:text; created_at:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getReservations: () -> (variant {Ok:vec record {id:text; status:text; amount_payable:text; created_at:nat64; user_id:text; duration_hours:nat64; spot_id:text; reserved_at:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getTransactionByTimestamp: (text) -> (variant {Ok:record {fee:text; user_id:text; timestamp:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getTransactions: () -> (variant {Ok:vec record {fee:text; user_id:text; timestamp:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getUserById: (text) -> (variant {Ok:record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getUserTransactions: (text) -> (variant {Ok:vec record {fee:text; user_id:text; timestamp:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getUsers: () -> (variant {Ok:vec record {id:text; username:text; balance:nat64; password:text; role:variant {User; Admin}; created_at:nat64; email:text; first_name:text; last_name:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    withdrawFunds: (record {user_id:text; amount:text}) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
}
